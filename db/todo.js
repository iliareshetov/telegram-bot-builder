const { Pool } = require('pg');
const pool = new Pool({
  connectionString: process.env.DATABASE_URL,
  ssl: {
    rejectUnauthorized: false
  }
});

// the pool will emit an error on behalf of any idle clients
// it contains if a backend error or network partition happens
pool.on('error', (err, client) => {
  console.error('Unexpected error on idle client', err)
  process.exit(-1)
})

// module.exports = {
//   async query(text, params) {
//     const start = Date.now()
//     const res = await pool.query(text, params)
//     const duration = Date.now() - start
//     console.log('executed query', { text, duration, rows: res.rowCount })
//     return res
//   }
// }

exports.createDatabase = function () {
  const pool = new Pool({
    connectionString: process.env.DATABASE_URL,
    ssl: {
      rejectUnauthorized: false
    }
  });

  pool.query("CREATE SCHEMA IF NOT EXISTS nlp_todo_bot;", (err, res) => {
    console.log(err, res);

    pool.query("CREATE TABLE IF NOT EXISTS nlp_todo_bot.todo(todoid INT GENERATED BY DEFAULT AS IDENTITY, userid INT NOT NULL, username text NOT NULL, todotask text NOT NULL)", (err, res) => {
      console.log(err, res);
      pool.end();
    });
  });
}